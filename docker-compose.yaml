version: '3.8'

x-airflow-common: &airflow-common
  build:
    context: ./airflow
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
  volumes:
    - ./airflow/dags:/opt/airflow/dags
    - ./airflow/logs:/opt/airflow/logs
    - ./airflow/plugins:/opt/airflow/plugins
    - ./spark/jobs:/opt/spark/jobs
    - ./data:/opt/data
    - ./data:/opt/bitnami/spark/data

services:
  postgres:
    image: postgres:13
    container_name: postgres
    networks:
      - data-pipeline-network
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    volumes:
      - postgres-db-volume:/var/lib/postgresql/data

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    networks:
      - data-pipeline-network
    entrypoint: /bin/bash
    depends_on:
      - postgres
    command: >
      -c "
      airflow db init &&
      airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org
      "
  
  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    user: root
    networks:
      - data-pipeline-network
    restart: always
    depends_on:
      - airflow-init
    ports:
      - "8080:8080"
    command: "webserver"

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    user: root
    networks:
      - data-pipeline-network
    restart: always
    depends_on:
      - airflow-init
    command: "scheduler"

  spark-master:
    image: bitnami/spark:3.5.0
    container_name: spark_master
    user: root
    networks:
      - data-pipeline-network
    ports:
      - "8081:8080"
      - "7077:7077"
    volumes:
      - ./spark/jobs:/opt/bitnami/spark/jobs
      - ./data:/opt/data

  spark-worker:
    image: bitnami/spark:3.5.0
    container_name: spark_worker
    user: root
    networks:
      - data-pipeline-network
    depends_on:
      - spark-master
    ports:
      - "8082:8080"
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_DIR=/opt/data/spark_work
    volumes:
      - ./spark/jobs:/opt/bitnami/spark/jobs
      - ./data:/opt/data

volumes:
  postgres-db-volume:

networks:
  data-pipeline-network: